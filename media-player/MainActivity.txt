package com.hui.class15_mediaplayer;

        import android.app.AlertDialog;
        import android.content.DialogInterface;
        import android.media.AudioManager;
        import android.media.MediaPlayer;
        import android.media.MediaRecorder;
        import android.os.Environment;
        import android.os.Handler;
        import android.os.Message;
        import android.support.v7.app.AppCompatActivity;
        import android.os.Bundle;
        import android.util.Log;
        import android.view.SurfaceHolder;
        import android.view.SurfaceView;
        import android.view.View;
        import android.widget.Button;
        import android.widget.CheckBox;
        import android.widget.CompoundButton;
        import android.widget.EditText;
        import android.widget.SeekBar;
        import android.widget.TextView;
        import android.widget.Toast;

        import java.io.File;
        import java.io.IOException;

public class MainActivity extends AppCompatActivity {
    SeekBar sbTime,sbSound;
    TextView tvTime,tvSound;
    Button btnPlay,btnRec;
    CheckBox cbIsLoop,cbMute;
    SurfaceView surfaceView;
    SurfaceHolder surfaceHolder;
    MediaPlayer mp;
    Handler handler;
    int duration;

    AudioManager audioManager;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        findviews();
        audioManager=(AudioManager)getSystemService(AUDIO_SERVICE);
        sbSound.setMax(audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC));
        sbSound.setProgress(audioManager.getStreamVolume(AudioManager.STREAM_MUSIC));
        tvSound.setText(audioManager.getStreamVolume(AudioManager.STREAM_MUSIC)+" / "+audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC));

        handler=new Handler(){
            @Override
            public void handleMessage(Message msg) {
                super.handleMessage(msg);
                sbTime.setProgress(msg.what);
                tvTime.setText(msg.what/1000+" / "+(duration/1000));
            }
        };
    }

    void findviews(){
        sbTime=(SeekBar)findViewById(R.id.seekBar);
        sbTime.setOnSeekBarChangeListener(seekBarChangeListener);

        sbSound=(SeekBar)findViewById(R.id.seekBar2);
        sbSound.setOnSeekBarChangeListener(seekBarChangeListener);

        tvTime=(TextView)findViewById(R.id.textView);
        tvSound=(TextView)findViewById(R.id.textView2);

        btnPlay=(Button)findViewById(R.id.button);
        cbIsLoop=(CheckBox)findViewById(R.id.checkBox);
        cbIsLoop.setOnCheckedChangeListener(checkedChangeListener);

        cbMute=(CheckBox)findViewById(R.id.checkBox2);
        cbMute.setOnCheckedChangeListener(checkedChangeListener);

        surfaceView=(SurfaceView)findViewById(R.id.surfaceView);
        surfaceHolder=surfaceView.getHolder();

        btnRec=(Button)findViewById(R.id.button5);
    }

    public void onPlay(View v){
        if(mp==null){
            //建立Mediaplayer物件並設定相關的設定
//            staticPlayer();
            callExternal();
//            callInternet();

        }else{
            if (mp.isPlaying()) {
                mp.pause();
                btnPlay.setText("播放");
            } else {
                mp.start();
                btnPlay.setText("暫停");
            }
        }

    }

    public void onStop(View v){
        if(mp!=null) {
            mp.stop();
            mp.release();
            mp=null;
            btnPlay.setText("播放");
        }
    }

    void staticPlayer(){
        mp = MediaPlayer.create(this, R.raw.littlemonster);
        mp.start();
        btnPlay.setText("暫停");
    }

    void callExternal(){
        File path= Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC);
        File file=new File(path,"myRec.3gp"); //取得外部路徑檔案
        mp=new MediaPlayer();
        try {
            mp.setDataSource(file.toString());  //設定多媒體檔案來源
            mp.setDisplay(surfaceHolder);  //利用SurfaceView來播放影像
            mp.prepare();  //把檔案載到記憶體中
            mp.start();
            btnPlay.setText("暫停");

            timeSeekBar();

        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    void callInternet(){
        //多媒體檔案的網址
//        String strUrl="http://www.youtube-mp3.org/get?video_id=9lZu4d_S-BM&ts_create=1477919756&r=MTIyLjExNy45LjE3NQ%3D%3D&h2=bbefc01a755252270d0b28e246bc56ab&s=151349";
        String strUrl="https://r6---sn-25glen7e.googlevideo.com/videoplayback?gir=yes&source=youtube&nh=IgpwcjAyLnBhcjAxKg03Mi4xNC4yMTguMTgz&itag=18&pl=20&dur=217.060&mime=video%2Fmp4&expire=1478106740&sparams=clen%2Cdur%2Cei%2Cgir%2Cid%2Cinitcwndbps%2Cip%2Cipbits%2Citag%2Clmt%2Cmime%2Cmm%2Cmn%2Cms%2Cmv%2Cnh%2Cpl%2Cratebypass%2Crequiressl%2Csource%2Cupn%2Cusequic%2Cexpire&ratebypass=yes&signature=AFD2E5ADCDA4B81DC1D9934AC9D8289AF3E7B34F.31A239BF2C55B5F3C27C79B7CC1CAA8258F06DD9&initcwndbps=3597500&clen=10049886&ipbits=0&mv=m&mt=1478084938&ms=au&ip=62.210.157.29&key=yt6&usequic=no&upn=Af0rN5b0pfY&mn=sn-25glen7e&mm=31&id=o-AEvn5_ibsH5H4aRvQphdgGzdxz3Z9v5P-PaNlM6Ou8z0&ei=FMoZWKHiBKnxiwa8tqywDg&lmt=1458199363534060&requiressl=yes&title=%E3%80%90%E5%86%B0%E9%9B%AA%E5%A5%87%E7%B7%A3%E3%80%91Let%20It%20Go";

        mp=new MediaPlayer();
        mp.setOnPreparedListener(preparedListener);
        try {
            //設定多媒體檔案來源
            mp.setDataSource(strUrl);
            mp.setDisplay(surfaceHolder);  //利用SurfaceView來播放影像
            //把檔案用非同步的方式載到記憶體中
            mp.prepareAsync();
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    MediaPlayer.OnPreparedListener preparedListener=new MediaPlayer.OnPreparedListener() {
        @Override
        public void onPrepared(MediaPlayer mediaPlayer) {
            mp.start();
            btnPlay.setText("暫停");

            timeSeekBar();
        }
    };

    void timeSeekBar(){
        if(mp!=null) {
            new Thread(new Runnable() {
                @Override
                public void run() {
                    duration = mp.getDuration();
                    sbTime.setMax(duration); //取得這首歌的總長度millisecond
                    while(mp!=null && mp.isPlaying()) {
                        //把現在播放的秒數更新到SeekBar
                        try {
                            handler.sendEmptyMessage(mp.getCurrentPosition());
                            Thread.sleep(100);
                        } catch (InterruptedException e) {
                            e.printStackTrace();
                        } catch (NullPointerException e){

                        }
                    }
                }
            }).start();
        }
    }

    SeekBar.OnSeekBarChangeListener seekBarChangeListener=new SeekBar.OnSeekBarChangeListener() {
        @Override
        public void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser) {
            if(seekBar.getId()==sbTime.getId()) {
                if (fromUser) { //判斷是不是使用者做拖拉的動作
                    mp.seekTo(progress);
                }
            }
            if(seekBar.getId()==sbSound.getId()){
                audioManager.setStreamVolume(AudioManager.STREAM_MUSIC,progress,AudioManager.FLAG_PLAY_SOUND);
                tvSound.setText(progress+" / "+audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC));
            }
        }

        @Override
        public void onStartTrackingTouch(SeekBar seekBar) {

        }

        @Override
        public void onStopTrackingTouch(SeekBar seekBar) {

        }
    };

    CompoundButton.OnCheckedChangeListener checkedChangeListener=new CompoundButton.OnCheckedChangeListener() {
        @Override
        public void onCheckedChanged(CompoundButton compoundButton, boolean b) {
            if(compoundButton.getId()==cbIsLoop.getId()) {
                if (mp != null) {
                    mp.setLooping(b);
                }
            }
            if(compoundButton.getId()==cbMute.getId()){
                audioManager.setStreamMute(AudioManager.STREAM_MUSIC,b);
                if(b) {
                    //API23 才改成用以下的方法
//                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,AudioManager.ADJUST_MUTE,AudioManager.FLAG_PLAY_SOUND);
                }else{
                    //API23 才改成用以下的方法
//                    audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,AudioManager.ADJUST_UNMUTE,AudioManager.FLAG_PLAY_SOUND);
                }
            }
        }
    };

    public void onRaise(View v){
        audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,AudioManager.ADJUST_RAISE,AudioManager.FLAG_PLAY_SOUND);
        if(cbMute.isChecked()){
            cbMute.setChecked(false);
        }
        tvSound.setText(audioManager.getStreamVolume(AudioManager.STREAM_MUSIC)+" / "+audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC));
        sbSound.setProgress(audioManager.getStreamVolume(AudioManager.STREAM_MUSIC));
    }

    public void onLower(View v){
        audioManager.adjustStreamVolume(AudioManager.STREAM_MUSIC,AudioManager.ADJUST_LOWER,AudioManager.FLAG_PLAY_SOUND);
        if(cbMute.isChecked()){
            cbMute.setChecked(false);
        }
        tvSound.setText(audioManager.getStreamVolume(AudioManager.STREAM_MUSIC)+" / "+audioManager.getStreamMaxVolume(AudioManager.STREAM_MUSIC));
        sbSound.setProgress(audioManager.getStreamVolume(AudioManager.STREAM_MUSIC));
    }

    //錄音功能的部份
    boolean isRec=false;
    MediaRecorder mr;
    EditText etFileName;
    public void onRecord(View v){
        if(isRec){
            if(mr!=null){
                mr.stop();
                mr.release();
                mr=null;
                btnRec.setText("錄音");

                //開對話視窗
                View myView=getLayoutInflater().inflate(R.layout.dialog_view,null);
                etFileName=(EditText)myView.findViewById(R.id.editText);
                new AlertDialog.Builder(this)
                        .setTitle("更改檔案名稱")
                        .setView(myView)
                        .setPositiveButton("OK", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialogInterface, int i) {

                            }
                        })
                        .setNegativeButton("Cancel", new DialogInterface.OnClickListener() {
                            @Override
                            public void onClick(DialogInterface dialogInterface, int i) {
                                Toast.makeText(MainActivity.this,"用預設檔名儲存",Toast.LENGTH_SHORT).show();
                            }
                        })
                        .show();
                File path = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC);
                File file = new File(path, "myRec.3gp");

                File newName=new File(path,etfilename.getText)
                file.renameTo(newName)

            }

        }else {
            File path = Environment.getExternalStoragePublicDirectory(Environment.DIRECTORY_MUSIC);
            File file = new File(path, "myRec.3gp");
            mr = new MediaRecorder();
            mr.setAudioSource(MediaRecorder.AudioSource.MIC);
            mr.setOutputFormat(MediaRecorder.OutputFormat.THREE_GPP);
            mr.setAudioEncoder(MediaRecorder.AudioEncoder.AMR_WB);
            mr.setOutputFile(file.toString());
            try {
                mr.prepare();
                mr.start();
                btnRec.setText("停止錄音");
                isRec=true;
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

    }
}